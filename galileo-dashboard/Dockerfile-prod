#############
### build ###
#############

# base image
FROM node:12.2.0 as build

# set working directory
WORKDIR /app

# add `/app/node_modules/.bin` to $PATH
ENV PATH /app/node_modules/.bin:$PATH

# install and cache app dependencies
COPY package.json /app/package.json
RUN npm install
RUN npm install -g @angular/cli@8.1.0

# add app
COPY . /app

# generate build
RUN ng build --prod --configuration docker-build --output-path=dist

############
### prod ###
############

# base image
FROM nginx:1.16.0-alpine

## Remove default Nginx website
RUN rm -rf /usr/share/nginx/html/*

COPY ./etc\/nginx.conf /etc/nginx/nginx.conf

# copy artifact build from the 'build environment'
COPY --from=build /app/dist /usr/share/nginx/html

# expose port 80
EXPOSE 80

# replace env variables in build, needs to be changed in case build target gets changed
# following env variables are used:
# API_URL
# SYMMETRY_URL
# GRAFANA_URL
RUN echo "mainFileName=\"\$(ls /usr/share/nginx/html/main*.js)\" && \
          envsubst '\$API_URL \$SYMMETRY_URL \$GRAFANA_URL ' < \${mainFileName} > main.tmp && \
          mv main.tmp \${mainFileName} && nginx -g 'daemon off;'" > run.sh

ENTRYPOINT ["sh", "run.sh"]
